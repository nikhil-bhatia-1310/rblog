{"ast":null,"code":"var _jsxFileName = \"C:\\\\NIKHIL\\\\STUDY\\\\PROJECTS\\\\rblog\\\\client\\\\src\\\\PostList.js\",\n  _s = $RefreshSig$();\n/** Use React, useState, useEffect, axios and also CommentCreate, CommentList components */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CommentCreate from './CommentCreate';\nimport CommentList from './CommentList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n  const [posts, setPosts] = useState({});\n  const fetchPosts = async () => {\n    try {\n      const res = await axios.get('http://localhost:4002/posts');\n      setPosts(res.data);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  //you tell React that your component needs to do something after render. \n  //React will remember the function you passed (we’ll refer to it as our “effect”), \n  //and call it later after performing the DOM updates\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const renderedPosts = Object.values(posts).map(post => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        width: '30',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n          comments: post.comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CommentCreate, {\n          postId: post.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  });\n  console.log(posts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-row flex-wrap justify-content-between\",\n    children: renderedPosts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}, \"x9bp4+EUybyoJxklz6lKZgAYJjU=\");","map":{"version":3,"names":["React","useState","useEffect","axios","CommentCreate","CommentList","jsxDEV","_jsxDEV","_s","posts","setPosts","fetchPosts","res","get","data","error","console","log","message","renderedPosts","Object","values","map","post","className","style","width","marginBottom","children","title","fileName","_jsxFileName","lineNumber","columnNumber","comments","postId","id"],"sources":["C:/NIKHIL/STUDY/PROJECTS/rblog/client/src/PostList.js"],"sourcesContent":["/** Use React, useState, useEffect, axios and also CommentCreate, CommentList components */\r\nimport React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport CommentCreate from './CommentCreate';\r\nimport CommentList from './CommentList';\r\n\r\nexport default() => {\r\n    const [posts, setPosts] = useState({});\r\n\r\n    const fetchPosts = async () => {\r\n        try {\r\n            const res = await axios.get('http://localhost:4002/posts');\r\n\r\n            setPosts(res.data);\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    };\r\n\r\n    //you tell React that your component needs to do something after render. \r\n    //React will remember the function you passed (we’ll refer to it as our “effect”), \r\n    //and call it later after performing the DOM updates\r\n    useEffect(()=> {\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    \r\n    const renderedPosts = Object.values(posts).map(post => {\r\n        return <div className='card' style={{ width: '30', marginBottom: '20px'}}\r\n        key={post.id}\r\n        >\r\n            <div className='card-body'>\r\n                <h3>{post.title}</h3>\r\n                <CommentList comments={post.comments}/>\r\n                <CommentCreate postId={post.id}/>\r\n\r\n            </div>\r\n        </div>\r\n    });\r\n\r\n    console.log(posts);\r\n\r\n    return (\r\n        <div className='d-flex flex-row flex-wrap justify-content-between'>\r\n            {renderedPosts}\r\n        </div>\r\n    );\r\n};"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAAC,EAAA,CAAc,MAAM;EAAAA,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtC,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,6BAA6B,CAAC;MAE1DH,QAAQ,CAACE,GAAG,CAACE,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAC9B;EACJ,CAAC;;EAED;EACA;EACA;EACAhB,SAAS,CAAC,MAAK;IACXS,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMQ,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACZ,KAAK,CAAC,CAACa,GAAG,CAACC,IAAI,IAAI;IACnD,oBAAOhB,OAAA;MAAKiB,SAAS,EAAC,MAAM;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE,IAAI;QAAEC,YAAY,EAAE;MAAM,CAAE;MAAAC,QAAA,eAGrErB,OAAA;QAAKiB,SAAS,EAAC,WAAW;QAAAI,QAAA,gBACtBrB,OAAA;UAAAqB,QAAA,EAAKL,IAAI,CAACM;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrB1B,OAAA,CAACF,WAAW;UAAC6B,QAAQ,EAAEX,IAAI,CAACW;QAAS;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACvC1B,OAAA,CAACH,aAAa;UAAC+B,MAAM,EAAEZ,IAAI,CAACa;QAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhC;IAAC,GAPLV,IAAI,CAACa,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQP,CAAC;EACV,CAAC,CAAC;EAEFjB,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;EAElB,oBACIF,OAAA;IAAKiB,SAAS,EAAC,mDAAmD;IAAAI,QAAA,EAC7DT;EAAa;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}